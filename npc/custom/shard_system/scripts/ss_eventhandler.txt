/**
 * Provides experience to the shard then
 * upgrades it when level threshold is met.
 * @param .@shard_id The shard receiving experience.
 * @param .@equip_slot Equipment slot for clarification.
 */
function script SSEventHandler {
    // Local function declarations.
    function storeExperience;
    function upgradeShard;
    function getPrimaryKey;
    function getShardLevel;
    function getExperience;

    // Data definitions
    .@shard_id = getarg(0);
    .@equip_slot = getarg(1);
    .@shard_key = getPrimaryKey;
    .@shard_level = getShardLevel;

    // MAIN CALL
    storeExperience;
    return;


    // MAIN FUNCTIONS
    // ========================================================================
    /**
     * This function will store experience points, known as "quintessence", for
     * leveling up shards. Calls getExperience to calculate essence. A shard becomes
     * a crystal when its max level is attained.
     */
    function storeExperience {
        // Store mob exp into the experience field.
        query_sql("
            UPDATE `shard`
            SET `experience` = `experience` + "+ getExperience +"
            WHERE `id` = " + .@shard_key
        ");

        // Provide the player with the next level shard if level threshold is met.
        if(query_sql("SELECT `experience` FROM `shard` WHERE `id` = " + .@shard_key) > $SS_NEXT_LEVEL[getShardLevel - 1])
            upgradeShard;

        // Success
        return 0;
    }

    /**
     * Upgrade the shard and provide player with the next
     * level of the item.
     * TODO: Make a script to ensure the right shard
     *       is equipped.
     */
    function upgradeShard {
        // Unequip and delete the old shard.
        unequip .@equip_slot;
        SSDeleteShard(.@shard_id, .@shard_key);

        // Create and equip the new shard.
        SSUpgradeShard(.@shard_id, .@shard_key);
        SSEquipShard(.@shard_id + 1, .@shard_key);
        return;
    }

    // ACCESSOR FUNCTIONS
    // ==================================================
    /**
     * Returns the 32-bit primary key.
     */
    function getPrimaryKey {
        return (getequipcardid(.@equip_slot, 2) << 16) + getequipcardid(.@equip_slot, 3);
    }

    /**
     * Returns the Shard level.
     */
    function getShardLevel {
        return getiteminfo(.@shard_id, 13);
    }
    
    /**
     * Returns the last slain mob's experience.
     * TODO: Just make sure a -1 value isn't returned.
     */
    function getExperience {
        // Gather monster experience.
        .@mob_exp = getmonsterinfo(killedrid, MOB_BASEEXP);
        return .@mob_exp;
    }
}
